"use strict";(self.webpackChunkpaystell_frontend=self.webpackChunkpaystell_frontend||[]).push([[6520],{"./src/components/transaction/AmountInput.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{VU:()=>AmountDisplay,J$:()=>AmountInput});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),input=__webpack_require__("./src/components/ui/input.tsx"),ui_button=__webpack_require__("./src/components/ui/button.tsx"),wallet=__webpack_require__("./node_modules/lucide-react/dist/esm/icons/wallet.js"),utils=__webpack_require__("./src/lib/utils.ts");__webpack_require__("./src/lib/wallet/stellar-service.ts"),__webpack_require__("./node_modules/console-browserify/index.js");const StellarContext=(0,react.createContext)(null);const DollarSign=({className,...props})=>(0,jsx_runtime.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",className,...props,children:[(0,jsx_runtime.jsx)("line",{x1:"12",x2:"12",y1:"2",y2:"22"}),(0,jsx_runtime.jsx)("path",{d:"M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"})]});function AmountInput({value="",initialValue,onChange,onValueChange,showUsdConversion=!0,showMaxButton=!0,maxButtonText="Max",currency="XLM",maxDecimals=7,reserveAmount=1.01,minAmount=0,className,inputClassName,error,disabled=!1,xlmPrice:propXlmPrice,xlmBalance:propXlmBalance,...props}){const stellarContext=(0,react.useContext)(StellarContext),balances=(null==stellarContext?void 0:stellarContext.state.balances)||[],hookXlmPrice=null==stellarContext?void 0:stellarContext.state.xlmPrice,[usdEquivalent,setUsdEquivalent]=(0,react.useState)(null),[isValidAmount,setIsValidAmount]=(0,react.useState)(!0);(0,react.useEffect)(()=>{initialValue&&!value&&(null==onChange||onChange(initialValue))},[initialValue,onChange,value]);const xlmPrice=null!=propXlmPrice?propXlmPrice:hookXlmPrice,xlmBalance=null!=propXlmBalance?propXlmBalance:(()=>{const xlmBalanceData=balances.find(asset=>"native"===asset.asset_type);return xlmBalanceData?Number(xlmBalanceData.balance):0})();(0,react.useEffect)(()=>{if(value&&xlmPrice&&!isNaN(Number(value))){const numericValue=Number(value);if(numericValue>=0){const usdValue=(numericValue*xlmPrice).toFixed(2);setUsdEquivalent(usdValue),onValueChange&&onValueChange(value,usdValue)}else setUsdEquivalent(null),onValueChange&&onValueChange(value,null)}else setUsdEquivalent(null),onValueChange&&onValueChange(value,null)},[value,xlmPrice]),(0,react.useEffect)(()=>{if(!value)return void setIsValidAmount(!0);const numericValue=Number(value),isValidFormat=new RegExp(`^\\d+(\\.\\d{1,${maxDecimals}})?$`).test(value);setIsValidAmount(isValidFormat&&numericValue>=minAmount&&!isNaN(numericValue))},[value,maxDecimals,minAmount]);const hasError=error||!isValidAmount;return(0,jsx_runtime.jsxs)("div",{className:(0,utils.cn)("space-y-2",className),children:[(0,jsx_runtime.jsxs)("div",{className:"relative",children:[(0,jsx_runtime.jsx)(input.p,{type:"text",inputMode:"decimal",value,onChange:e=>{let inputValue=e.target.value;if(""===inputValue)return void(null==onChange||onChange(inputValue));inputValue=inputValue.replace(/[^0-9.]/g,"");if((inputValue.match(/\./g)||[]).length>1)return;const parts=inputValue.split(".");parts[1]&&parts[1].length>maxDecimals&&(inputValue=`${parts[0]}.${parts[1].substring(0,maxDecimals)}`),inputValue.length>1&&inputValue.startsWith("0")&&!inputValue.startsWith("0.")&&(inputValue=inputValue.substring(1)),null==onChange||onChange(inputValue)},disabled,className:(0,utils.cn)("pr-20",hasError&&"border-destructive focus-visible:border-destructive",showUsdConversion&&usdEquivalent&&"pr-32",inputClassName),...props}),(0,jsx_runtime.jsx)("div",{className:"absolute right-3 top-1/2 transform -translate-y-1/2 text-sm text-muted-foreground font-medium",children:currency}),showUsdConversion&&usdEquivalent&&(0,jsx_runtime.jsxs)("div",{className:"absolute right-16 top-1/2 transform -translate-y-1/2 text-xs text-muted-foreground flex items-center",children:[(0,jsx_runtime.jsx)(DollarSign,{className:"h-3 w-3 mr-1"}),usdEquivalent]})]}),(0,jsx_runtime.jsxs)("div",{className:"flex items-center justify-between",children:[(0,jsx_runtime.jsxs)("div",{className:"flex items-center space-x-2",children:[showMaxButton&&(0,jsx_runtime.jsxs)(ui_button.$,{type:"button",variant:"outline",size:"sm",onClick:()=>{if(!xlmBalance||disabled)return;const availableBalance=Math.max(0,xlmBalance-reserveAmount);if(availableBalance<=0)return;const formattedAmount=(0,utils.ej)(availableBalance.toString(),maxDecimals);null==onChange||onChange(formattedAmount)},disabled:disabled||!xlmBalance||xlmBalance<=reserveAmount,className:"h-7 px-3 text-xs",children:[(0,jsx_runtime.jsx)(wallet.A,{className:"h-3 w-3 mr-1"}),maxButtonText]}),xlmBalance>0&&(0,jsx_runtime.jsxs)("span",{className:"text-xs text-muted-foreground",children:["Available: ",(0,utils.ej)(xlmBalance.toString(),2)," ",currency]})]}),showUsdConversion&&value&&Number(value)>0&&usdEquivalent&&(0,jsx_runtime.jsxs)("span",{className:"text-xs text-muted-foreground",children:["≈ $",usdEquivalent," USD"]})]}),error&&(0,jsx_runtime.jsx)("p",{className:"text-xs text-destructive mt-1",children:error}),!isValidAmount&&!error&&value&&(0,jsx_runtime.jsxs)("p",{className:"text-xs text-destructive mt-1",children:["Invalid amount format. Maximum ",maxDecimals," decimal places allowed."]})]})}function AmountDisplay({amount,currency="XLM",usdValue,showUsd=!0,className,size="md"}){return(0,jsx_runtime.jsxs)("div",{className:(0,utils.cn)("text-right",className),children:[(0,jsx_runtime.jsxs)("div",{className:(0,utils.cn)("font-semibold",{sm:"text-sm",md:"text-base",lg:"text-lg"}[size]),children:[(0,utils.ej)(amount,7)," ",currency]}),showUsd&&usdValue&&(0,jsx_runtime.jsxs)("div",{className:(0,utils.cn)("text-muted-foreground",{sm:"text-xs",md:"text-sm",lg:"text-base"}[size]),children:["≈ $",usdValue," USD"]})]})}AmountInput.__docgenInfo={description:"",methods:[],displayName:"AmountInput",props:{value:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"''",computed:!1}},initialValue:{required:!1,tsType:{name:"string"},description:""},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:""},onValueChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string, usdValue: string | null) => void",signature:{arguments:[{type:{name:"string"},name:"value"},{type:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},name:"usdValue"}],return:{name:"void"}}},description:""},showUsdConversion:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},showMaxButton:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},maxButtonText:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'Max'",computed:!1}},currency:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'XLM'",computed:!1}},maxDecimals:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"7",computed:!1}},reserveAmount:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"1.01",computed:!1}},minAmount:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"0",computed:!1}},className:{required:!1,tsType:{name:"string"},description:""},inputClassName:{required:!1,tsType:{name:"string"},description:""},error:{required:!1,tsType:{name:"string"},description:""},disabled:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},xlmPrice:{required:!1,tsType:{name:"number"},description:""},xlmBalance:{required:!1,tsType:{name:"number"},description:""}},composes:["Omit"]},AmountDisplay.__docgenInfo={description:"",methods:[],displayName:"AmountDisplay",props:{amount:{required:!0,tsType:{name:"string"},description:""},currency:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'XLM'",computed:!1}},usdValue:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:""},showUsd:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},className:{required:!1,tsType:{name:"string"},description:""},size:{required:!1,tsType:{name:"union",raw:"'sm' | 'md' | 'lg'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"}]},description:"",defaultValue:{value:"'md'",computed:!1}}}}},"./src/lib/wallet/stellar-service.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E8:()=>server,VJ:()=>fetchAccountBalances,r1:()=>fetchPaymentOperations,vi:()=>createPaymentTransaction});var _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@stellar/stellar-sdk/dist/stellar-sdk.min.js"),console=__webpack_require__("./node_modules/console-browserify/index.js");const server=new _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_0__.Horizon.Server("https://horizon-testnet.stellar.org"),networkPassphrase=_stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_0__.Networks.TESTNET,fetchAccountBalances=async publicKey=>{try{return(await server.loadAccount(publicKey)).balances}catch(error){throw console.error("Error fetching account balances:",error),new Error("Failed to fetch account balances")}},fetchPaymentOperations=async(publicKey,cursor=null,limit=20)=>{try{let builder=server.payments().forAccount(publicKey).limit(limit).order("desc").join("transactions");cursor&&(builder=builder.cursor(cursor));const response=await builder.call();return{records:response.records,next:response.records.length>0?response.records[response.records.length-1].paging_token:null,prev:response.records.length>0?response.records[0].paging_token:null}}catch(error){throw console.error("Error fetching payment operations:",error),new Error("Failed to fetch payment operations")}},createPaymentTransaction=async({source,destination,amount,memo=""})=>{try{const sourceAccount=await server.loadAccount(source),transaction=new _stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_0__.TransactionBuilder(sourceAccount,{networkPassphrase,fee:"100000"});memo&&transaction.addMemo(_stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_0__.Memo.text(memo)),transaction.addOperation(_stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_0__.Operation.payment({destination,asset:_stellar_stellar_sdk__WEBPACK_IMPORTED_MODULE_0__.Asset.native(),amount:amount.toString()}));return{transaction:transaction.setTimeout(300).build().toXDR(),network_passphrase:networkPassphrase}}catch(error){throw console.error("Error creating payment transaction:",error),error}}}}]);